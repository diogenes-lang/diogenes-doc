name: Build and Release

on:
  push:
    tags:
    - '*'
    branches: [ "master" ]
    paths-ignore:
    - 'README.md'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
    - 'README.md'
  schedule:
  - cron: '0 0 1 * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  build:
    strategy:
      matrix:
        python: ['3.9', '3.11']
      fail-fast: false

    name: Python ${{ matrix.python }}

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx pygments
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install custom Lexers
      run: cd lexers && python setup.py develop && pip install co2-lexer-and-style && cd $OLDPWD

    - name: Build documentation
      run: make build-fatal-warnings

    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: doc-artifact-${{ matrix.python }}
        path: build/html/


  release:
    name: Release Artifact
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}

    steps:

    - name: Download documentation artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: doc-artifact-3.11
        path: build/html

    - name: Upload documentation artifact to Github Releases
      uses: fnkr/github-action-ghr@v1
      env:
        GHR_PATH: build
        GHR_COMPRESS: zip
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deploy-pages:
    name: Deploy Github Pages
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:

    - name: Download documentation artifact
      uses: actions/download-artifact@v4.1.7
      with:
        name: doc-artifact-3.11
        path: build/html

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/html

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
